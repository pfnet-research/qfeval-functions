name: Documentation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --group dev
    
    - name: Build documentation
      run: uv run make docs
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/_build/html
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
    
    - name: Comment PR with documentation link
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          // Get the run ID for the artifact link
          const runId = context.runId;
          const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`;
          
          const commentBody = `ðŸ“š **Documentation Preview**
          
          Documentation has been built successfully for this PR.
          
          **How to view:**
          1. Go to [Actions Run](${artifactUrl})
          2. Download the "documentation" artifact
          3. Extract and open \`index.html\` in your browser
          
          **Latest build:** [ðŸ“¥ Download Documentation](${artifactUrl})
          
          _This comment will be updated with the latest documentation build._`;
          
          // Check if there's already a documentation comment
          const comments = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const botComment = comments.data.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('ðŸ“š **Documentation Preview**')
          );
          
          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              comment_id: botComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
          }