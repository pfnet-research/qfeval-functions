# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, qfeval-functions contributors
# This file is distributed under the same license as the qfeval-functions
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qfeval-functions \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-28 00:58+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../api/qfeval_functions.functions.mulmean.rst:2
msgid "qfeval\\_functions.functions.mulmean"
msgstr "qfeval\\_functions.functions.mulmean"

#: of qfeval_functions.functions.mulmean.mulmean:1
#, fuzzy
msgid "Compute the mean of element-wise product in a memory-efficient way."
msgstr "メモリ効率に優れた方法で `(x * y).mean(...)` を計算します。"

#: of qfeval_functions.functions.mulmean.mulmean:3
msgid ""
"This function calculates the mean of the element-wise product of two "
"tensors ``(x * y).mean(dim)`` without creating the intermediate product "
"tensor in memory. This is particularly useful when working with large "
"tensors where memory efficiency is critical, or when broadcasting between"
" tensors would result in a very large intermediate tensor."
msgstr ""

#: of qfeval_functions.functions.mulmean.mulmean:9
msgid ""
"The function is mathematically equivalent to ``(x * y).mean(dim)`` but "
"uses a more memory-efficient implementation that avoids materializing the"
" full product tensor."
msgstr ""

#: ../../api/qfeval_functions.functions.mulmean.rst
msgid "Parameters"
msgstr ""

#: of qfeval_functions.functions.mulmean.mulmean:14
msgid "The first input tensor."
msgstr ""

#: of qfeval_functions.functions.mulmean.mulmean:17
msgid "The second input tensor. Must be broadcastable with :attr:`x`."
msgstr ""

#: of qfeval_functions.functions.mulmean.mulmean:20
msgid ""
"The dimension(s) along which to compute the mean. If not specified "
"(default is empty tuple), the mean is computed over all dimensions."
msgstr ""

#: of qfeval_functions.functions.mulmean.mulmean:24
msgid ""
"Whether the output tensor has :attr:`dim` retained or not. Default is "
"False."
msgstr ""

#: of qfeval_functions.functions.mulmean.mulmean:28
msgid ""
"Delta degrees of freedom for internal calculations. The divisor used is "
"``N - _ddof``, where ``N`` is the number of elements. Default is 0. This "
"is an internal parameter."
msgstr ""

#: ../../api/qfeval_functions.functions.mulmean.rst
#, fuzzy
msgid "Returns"
msgstr "戻り値の型"

#: of qfeval_functions.functions.mulmean.mulmean:33
msgid ""
"The mean of the element-wise product. The shape depends on the input "
"dimensions, :attr:`dim`, and :attr:`keepdim` parameters."
msgstr ""

#: ../../api/qfeval_functions.functions.mulmean.rst
msgid "Return type"
msgstr "戻り値の型"

#: of qfeval_functions.functions.mulmean.mulmean:38
msgid "Example"
msgstr ""

#: of qfeval_functions.functions.mulmean.mulmean:70
msgid ""
":func:`mulsum`: The underlying function for memory-efficient "
"multiplication and summation. :func:`covar`: Uses this function for "
"covariance calculations."
msgstr ""

#~ msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~torch.Tensor\\``"
#~ msgstr ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~torch.Tensor\\``"

